version: '3.8'

services:
  # IoT Tracking Server
  iot-server:
    build: 
      context: .
      target: production
    container_name: iot-tracking-server
    ports:
      - "${PORT:-3000}:3000"
    environment:
      - NODE_ENV=production
      - PORT=3000
      - REDIS_URL=redis://redis:6379
    env_file:
      - .env
    depends_on:
      redis:
        condition: service_healthy
    volumes:
      - ./logs:/usr/src/app/logs
      - /etc/localtime:/etc/localtime:ro  # Sync container time with host
    restart: unless-stopped
    networks:
      - iot-network
    healthcheck:
      test: ["CMD-SHELL", "node -e \"require('http').get('http://localhost:3000/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })\""]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Redis for rate limiting and caching
  redis:
    image: redis:7-alpine
    container_name: iot-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
      - ./redis.conf:/usr/local/etc/redis/redis.conf:ro
    command: redis-server /usr/local/etc/redis/redis.conf
    restart: unless-stopped
    networks:
      - iot-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 3
    logging:
      driver: "json-file"
      options:
        max-size: "5m"
        max-file: "3"
    sysctls:
      - net.core.somaxconn=65535

  # Optional: MongoDB (if not using MongoDB Atlas)
  # Uncomment this section if you want to run MongoDB locally
  # mongodb:
  #   image: mongo:7
  #   container_name: iot-mongodb
  #   ports:
  #     - "27017:27017"
  #   environment:
  #     - MONGO_INITDB_ROOT_USERNAME=${MONGO_ROOT_USERNAME:-admin}
  #     - MONGO_INITDB_ROOT_PASSWORD=${MONGO_ROOT_PASSWORD:-password}
  #     - MONGO_INITDB_DATABASE=${DB_NAME:-iot_tracking}
  #   volumes:
  #     - mongodb_data:/data/db
  #     - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
  #   restart: unless-stopped
  #   networks:
  #     - iot-network
  #   healthcheck:
  #     test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
  #     interval: 10s
  #     timeout: 5s
  #     retries: 3
  #   logging:
  #     driver: "json-file"
  #     options:
  #       max-size: "10m"
  #       max-file: "3"

  # Optional: Nginx reverse proxy
  # Uncomment this section if you want to add a reverse proxy
  # nginx:
  #   image: nginx:alpine
  #   container_name: iot-nginx
  #   ports:
  #     - "80:80"
  #     - "443:443"
  #   volumes:
  #     - ./nginx.conf:/etc/nginx/nginx.conf:ro
  #     - ./ssl:/etc/nginx/ssl:ro
  #   depends_on:
  #     - iot-server
  #   restart: unless-stopped
  #   networks:
  #     - iot-network

# Named volumes for data persistence
volumes:
  redis_data:
    driver: local
  # mongodb_data:
  #   driver: local

# Network configuration
networks:
  iot-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16